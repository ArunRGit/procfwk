{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Get Subscription",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://management.azure.com/subscriptions?api-version=2020-01-01",
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://management.core.windows.net/"
					}
				}
			},
			{
				"name": "Get Pipeline Runs",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set Parsed Subscription",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Resource Group",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Query Run Days Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://management.azure.com/subscriptions/@{variables('SubscriptionId')}/resourceGroups/@{activity('Get Resource Group').output.firstRow.PropertyValue}/providers/Microsoft.DataFactory/factories/@{pipeline().DataFactory}/queryPipelineRuns?api-version=2018-06-01",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n  \"lastUpdatedAfter\": \"@{adddays(utcnow(),int(activity('Get Query Run Days Value').output.firstRow.PropertyValue))}\",\n  \"lastUpdatedBefore\": \"@{utcnow()}\",\n  \"filters\": [\n    {\n      \"operand\": \"PipelineName\",\n      \"operator\": \"Equals\",\n      \"values\": [\n        \"@{pipeline().parameters.PipelineName}\"\n      ]\n    }\n  ]\n}",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://management.core.windows.net/"
					}
				}
			},
			{
				"name": "Set Parsed Subscription",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Subscription",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SubscriptionId",
					"value": {
						"value": "@replace(activity('Get Subscription').output.value[0].id,'/subscriptions/','')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter In Progress Runs",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Pipeline Runs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Pipeline Runs').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().status,'InProgress')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Resource Group",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[procfwk].[GetPropertyValue]",
						"storedProcedureParameters": {
							"PropertyName": {
								"type": "String",
								"value": "FrameworkFactoryResourceGroup"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Query Run Days Value",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[procfwk].[GetPropertyValue]",
						"storedProcedureParameters": {
							"PropertyName": {
								"type": "String",
								"value": "PreviousPipelineRunsQueryRange"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Pipeline Is Running",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Using Batch Executions",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('RunCount')),1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "STUFF RUNNING",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "Get Execution Batch Status",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[procfwk].[GetPropertyValue]",
						"storedProcedureParameters": {
							"PropertyName": {
								"type": "String",
								"value": "UseExecutionBatches"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Using Batch Executions",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Execution Batch Status",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Filter In Progress Runs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Execution Batch Status').output.firstRow.PropertyValue,string(1))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set Run Count Without Batch",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RunCount",
								"value": {
									"value": "@string(activity('Filter In Progress Runs').output.FilteredItemsCount)",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Filter for Batch Name",
							"type": "Filter",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Filter In Progress Runs').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@equals(item().parameters.BatchName,pipeline().parameters.BatchName)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Run Count for Batch",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Filter for Batch Name",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RunCount",
								"value": {
									"value": "@string(activity('Filter for Batch Name').output.FilteredItemsCount)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"BatchName": {
				"type": "string",
				"defaultValue": "Hourly"
			},
			"PipelineName": {
				"type": "string",
				"defaultValue": "02-Parent"
			}
		},
		"variables": {
			"SubscriptionId": {
				"type": "String"
			},
			"RunCount": {
				"type": "String"
			}
		},
		"annotations": []
	}
}